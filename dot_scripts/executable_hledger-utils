#!/usr/bin/env -S just --working-directory . --justfile
set quiet

hledger := `which hledger`  # require 'hledger'
ledger_budget_file := parent_directory(env('LEDGER_FILE')) + "/budgets.journal"
budget_opts := "--file=" + ledger_budget_file + " -V --auto"

[private]
default:
  echo "Set of utilities for HLedger\n"
  just --justfile {{justfile()}} --list

# Show the unmarked transactions
unmarked account="credit-card":
  hledger reg {{account}} --period="from 2025" --unmarked

# Print the journal in order
print year="2025":
  hledger print --explicit --strict --period="from {{year}}"

# Print the taxes paid in each tax year
taxes:
  hledger bal expr:"taxes and payee:Finanzamt" --pivot="tax-year" --no-total

# Print the salary earned in each year
salary:
  hledger bal expr:"salary and payee:Canonical" --invert --yearly --no-total --transpose

# Calculate the net salary for a certain year
net-salary year="2025":
  #!/usr/bin/env bash
  taxes="$(hledger bal expr:'taxes and payee:Finanzamt' \
    --pivot=tax-year \
    --no-total \
    --output-format=csv \
    | grep \"{{year}}\" \
    | cut -d, -f2 \
    | sed -E 's/\"€ ([0-9]+\.[0-9]{2})\"/\1/g')"
  salary="$(hledger bal expr:'salary and payee:Canonical' \
    --invert \
    --yearly \
    --no-total \
    --transpose \
    --output-format=csv \
    | grep \"{{year}}\" \
    | cut -d, -f2 \
    | sed -E 's/\"€ ([0-9]+\.[0-9]{2})\"/\1/g')"
  bonuses="$(hledger bal expr:'revenues:work:bonus' \
    --invert \
    --yearly \
    --no-total \
    --transpose \
    --output-format=csv \
    | grep \"{{year}}\" \
    | cut -d, -f2 \
    | sed -E 's/\"€ ([0-9]+\.[0-9]{2})\"/\1/g')"
  net_yearly_salary="$(echo "scale=2; $salary - $taxes" | bc)"
  net_monthly_salary="$(echo "scale=2; $net_yearly_salary / 12" | bc)"
  net_yearly_salary_with_bonus="$(echo "scale=2; $salary + $bonuses - $taxes" | bc)"
  net_monthly_salary_with_bonus="$(echo "scale=2; $net_yearly_salary_with_bonus / 12" | bc)"
  taxes_percentage="$(echo "scale=2; 100 * $taxes / $salary" | bc)"
  echo "{{year}} Net salary is € $net_monthly_salary / month (€ $net_yearly_salary / year)"
  echo "Bonuses: € $bonuses (bringing the salary to € $net_monthly_salary_with_bonus / month , € $net_yearly_salary_with_bonus / year)"
  echo "Salary tax: ${taxes_percentage}%"
